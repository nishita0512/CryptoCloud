// Generated by view binder compiler. Do not edit!
package com.example.cryptocloud.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cryptocloud.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPropertiesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView topCardViewPropertiesActivity;

  @NonNull
  public final TextView txtFileNamePropertiesActivity;

  @NonNull
  public final TextView txtFileSizePropertiesActivity;

  @NonNull
  public final TextView txtFileTimeCreatedPropertiesActivity;

  @NonNull
  public final TextView txtFileTypePropertiesActivity;

  private ActivityPropertiesBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView topCardViewPropertiesActivity,
      @NonNull TextView txtFileNamePropertiesActivity,
      @NonNull TextView txtFileSizePropertiesActivity,
      @NonNull TextView txtFileTimeCreatedPropertiesActivity,
      @NonNull TextView txtFileTypePropertiesActivity) {
    this.rootView = rootView;
    this.topCardViewPropertiesActivity = topCardViewPropertiesActivity;
    this.txtFileNamePropertiesActivity = txtFileNamePropertiesActivity;
    this.txtFileSizePropertiesActivity = txtFileSizePropertiesActivity;
    this.txtFileTimeCreatedPropertiesActivity = txtFileTimeCreatedPropertiesActivity;
    this.txtFileTypePropertiesActivity = txtFileTypePropertiesActivity;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPropertiesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPropertiesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_properties, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPropertiesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.topCardViewPropertiesActivity;
      MaterialCardView topCardViewPropertiesActivity = ViewBindings.findChildViewById(rootView, id);
      if (topCardViewPropertiesActivity == null) {
        break missingId;
      }

      id = R.id.txtFileNamePropertiesActivity;
      TextView txtFileNamePropertiesActivity = ViewBindings.findChildViewById(rootView, id);
      if (txtFileNamePropertiesActivity == null) {
        break missingId;
      }

      id = R.id.txtFileSizePropertiesActivity;
      TextView txtFileSizePropertiesActivity = ViewBindings.findChildViewById(rootView, id);
      if (txtFileSizePropertiesActivity == null) {
        break missingId;
      }

      id = R.id.txtFileTimeCreatedPropertiesActivity;
      TextView txtFileTimeCreatedPropertiesActivity = ViewBindings.findChildViewById(rootView, id);
      if (txtFileTimeCreatedPropertiesActivity == null) {
        break missingId;
      }

      id = R.id.txtFileTypePropertiesActivity;
      TextView txtFileTypePropertiesActivity = ViewBindings.findChildViewById(rootView, id);
      if (txtFileTypePropertiesActivity == null) {
        break missingId;
      }

      return new ActivityPropertiesBinding((ConstraintLayout) rootView,
          topCardViewPropertiesActivity, txtFileNamePropertiesActivity,
          txtFileSizePropertiesActivity, txtFileTimeCreatedPropertiesActivity,
          txtFileTypePropertiesActivity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
